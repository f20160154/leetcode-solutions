class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        map<int,vector<int>> m;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size();i++)
        {
            m[nums[i]].push_back(i);
        }
        vector<vector<int>> result;
        if(nums.size()==0 || nums.size()==1 || nums.size()==2)
        {
            return result;
        }
        for(int i=0;i<nums.size()-1;i++)
        {
            if(i!=0 and nums[i]==nums[i-1])
            {
                continue;
            }
            if(nums[i]>0)
            {
                break;
            }
            for(int j=i+1;j<nums.size();j++)
            {
                if(j!=i+1 and nums[j]==nums[j-1])
                {
                    continue;
                }
                int x=-(nums[i]+nums[j]);
                if(nums[j]>x)
                {
                    break;
                }
                if(m[x].size()>0)
                {
                    int k=m[x].size()-1;
                    int t=m[x][k];
                    {
                        if(m[x][k]>j)
                        {
                            vector<int> temp;
                            temp.push_back(nums[i]);
                            temp.push_back(nums[j]);
                            temp.push_back(nums[t]);
                            result.push_back(temp);
                            if(!nums[i] and !nums[j])
                            {
                                i=i+3;
                            }
                        }
                    }
                }
                if(i>=nums.size()-1)
                {
                    break;
                }
                if(nums[i]==0)
                {
                    break;
                }
            }
            if(nums[i]==0)
            {
                break;
            }
        }
        return result;
    }
};
