class Solution {
public:
    string longestPalindrome(string s) {
        if(s.length()==0)
        {
            return "";
        }
        int count=0,max=0,start=0;
        for(int i=0;i<=s.length();i++)
        {
            count=1;
            if(count>max)
            {
                max=count;
                start=i;
            }
            if(i+1<=s.length()-1 and s[i]==s[i+1])
            {
                count=2;
                int k=1;
                int start1=i;
                while(i-k>=0 and i+k+1<=s.length()-1 and s[i-k]==s[i+k+1])
                {
                    count+=2;
                    start1=i-k;
                    k++;
                }
                if(count>max)
                {
                    max=count;
                    start=start1;
                }
            }
            if(i-1>=0 and i+1<=s.length()-1 and s[i-1]==s[i+1])
            {
                count=3;
                int k=2;
                int start1=i-1;
                while(i-k>=0 and i+k<=s.length()-1 and s[i-k]==s[i+k])
                {
                    count+=2;
                    start1=i-k;
                    k++;
                }
                if(count>max)
                {
                    max=count;
                    start=start1;
                }
            }
        }
        string result;
        for(int i=start;i<start+max;i++)
        {
            result+=s[i];
        }
        return result;
    }
};
