class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> v;
        vector<int> temp;
        temp.clear();
        v.push_back(temp);
        if(nums.size()==0)
        {
            return v;
        }
        int x=1;
        int count=0;
        map<int,int> m;
        for(int i=0;i<=nums.size()-1;i++)
        {
            m[nums[i]]=i;
        }
        while(x<=nums.size())
        {
            int y=v.size();
            int temp1=count;
            count=-1;
            for(int j=y-temp1-1;j<=y-1;j++)
            {
                if(v[j].size()>0)
                {   
                    for(int i=m[v[j][v[j].size()-1]]+1;i<=nums.size()-1;i++)
                    {
                        temp=v[j];
                        temp.push_back(nums[i]);
                        v.push_back(temp);
                        count++;
                    }
                }
                else 
                {
                    for(int i=0;i<=nums.size()-1;i++)
                    {
                        temp=v[j];
                        temp.push_back(nums[i]);
                        v.push_back(temp);
                        count++;
                    }
                }
            }
            x++;
        }
        return v;
    }
};
