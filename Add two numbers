/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int rem=0;
        ListNode *head=l1;
        if(l1==NULL)
        {
            return l2;
        }
        if(l2==NULL)
        {
            return l1;
        }
        while(1)
        {
            l1->val=rem+l1->val+l2->val;
            rem=l1->val/10;
            l1->val=l1->val%10;
            if(!l1->next and !l2->next)
            {
                break;
            }
            else if(!l1->next)
            {
                l1->next=new ListNode(0);
            }
            else if(!l2->next)
            {
                l2->next=new ListNode(0);
            }
            l1=l1->next;
            l2=l2->next;
        }
        if(rem==1)
        {
            l1->next= new ListNode(1);
        }
        return head;
    }
};
