/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int postindex=postorder.size()-1;
        TreeNode *root=buildUtil(inorder,postorder,0,postorder.size()-1,&postindex);
        return root;
    }
    
    TreeNode* buildUtil(vector<int>&inorder, vector<int>&postorder, int start,int end,int *pindex) {
        if(start>end)
        {
            return NULL;
        }
        TreeNode* node= new TreeNode(postorder[*pindex]);
        (*pindex)--;
        int i;
        for(i=start;i<=end;i++)
        {
            if(inorder[i]==node->val)
            {
                break;
            }
        }
        if(start==end)
        {
            return node;
        }
        node->right=buildUtil(inorder,postorder,i+1,end,pindex);
        node->left=buildUtil(inorder,postorder,start,i-1,pindex);
        return node;
    }
};
