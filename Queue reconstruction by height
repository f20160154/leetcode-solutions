class Solution {
public:
    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {
        if(people.size()==0)
        {
            return people;
        }
        set<pair<int,int>> s;
        for(int i=0;i<=people.size()-1;i++)
        {
            s.insert(make_pair(people[i][1],people[i][0]));
        }
        people.clear();
        set<pair<int,int>>::iterator itr;
        for(itr=s.begin();itr!=s.end();itr++)
        {
            pair<int,int> p=*itr;
            if(itr==s.begin())
            {
                vector<int> v;
                v.push_back(p.second);
                v.push_back(p.first);
                people.push_back(v);
            }
            else
            {
                int count=0;bool count1=false;
                for(int i=0;i<=people.size()-1;i++)
                {
                    if(people[i][0]>=p.second)
                    {
                        count++;
                    }
                    if(count==p.first+1)
                    {
                        vector<int> v;
                        v.push_back(p.second);
                        v.push_back(p.first);
                        people.insert(people.begin()+i,v);
                        count1=true;
                        break;
                    }
                }
                if(count1==false)
                {
                    vector<int> v;
                    v.push_back(p.second);
                    v.push_back(p.first);
                    people.push_back(v);
                }
            }
        }
        return people;
    }
};
