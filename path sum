/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int sum) {
        if(root==NULL)
        {
            return false;
        }
        queue<pair<TreeNode* , int>> q;
        q.push(make_pair(root,root->val));
        while(!q.empty())
        {
            pair<TreeNode*, int>temp = q.front();
            q.pop();
            if(temp.first->left)
            {
                q.push(make_pair(temp.first->left,temp.second+temp.first->left->val));
            }
            if(temp.first->right)
            {
                q.push(make_pair(temp.first->right,temp.second+temp.first->right->val));
            }
            if(!temp.first->left and !temp.first->right)
            {
                if(temp.second==sum)
                {
                    return true;
                }
            }
        }
        return false;
    }
};
