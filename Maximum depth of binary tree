/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root==NULL)
        {
            return 0;
        }
        queue<pair<TreeNode* , int>> q;
        q.push(make_pair(root,1));
        int max=1;
        while(!q.empty())
        {
            pair<TreeNode*, int> temp;
            temp = q.front();
            q.pop();
            if(temp.first->left)
            {
                q.push(make_pair(temp.first->left,temp.second+1));
                if(max<temp.second+1)
                {
                    max=temp.second+1;
                }
            }
            
            if(temp.first->right)
            {
                q.push(make_pair(temp.first->right, temp.second+1));
                if(max<temp.second+1)
                {
                    max=temp.second+1;
                }
            }
            
        }
        return max;
    }
};
