/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *headL1 = l1;
        ListNode *temp;
        if(l1 == NULL)
        {
            return l2;
        }
        else if(l2 == NULL)
        {
            return l1;
        }
        else
        {
             while(l1 != NULL)
            {
                if(l1->val > l2->val)
                {  
                    ListNode *tempL2;
                    if(l1 == headL1)
                    {
                        tempL2 = l2->next;
                        l2->next = l1;
                        headL1=l2;
                    }
                    else
                    {
                        tempL2= l2->next; 
                        l2->next = l1;
                        temp->next = l2;
                    }
                    temp=l2;
                    l2=tempL2;
                }
                else
                {
                    temp=l1;
                    l1 = l1->next;
                    if(l1 == NULL)
                    {
                        temp->next = l2;
                        break;
                    }
                }
                if(l2==NULL)
                {
                    break;
                }
            }
            return headL1;
        }
    }
};

