class Solution {
public:
    int hammingDistance(int x, int y) {
        vector<int> v1,v2;
        if(x==0)
        {
            v1.push_back(0);
        }
        while(x>0)
        {
            v1.push_back(x%2);
            x=x/2;
        }
        if(y==0)
        {
            v2.push_back(0);
        }
        while(y>0)
        {
            v2.push_back(y%2);
            y=y/2;
        }
        if(v1.size()<v2.size())
        {
            vector<int> v3;
            v3=v1;
            v1=v2;
            v2=v3;
        }
        int count=0;
        for(int i=0;i<v1.size();i++)
        {
            if(i<v2.size() && v1[i]!=v2[i])
            {
                count++;
            }
            else if(i>=v2.size())
            {
                if(v1[i]==1)
                {
                    count++;
                }
            }
        
        }
        return count;
    }
};
